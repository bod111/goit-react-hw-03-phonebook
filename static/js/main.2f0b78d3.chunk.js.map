{"version":3,"sources":["Components/Filter/Filter.module.css","Components/Contacts/Contacts.jsx","Components/Filter/Filter.jsx","Components/Form/Form.jsx","Components/Section/Section.jsx","Components/App.js","index.js","Components/Form/Form.module.css","Components/Contacts/Contacts.module.css"],"names":["module","exports","Contacts","options","onDelete","map","option","lendth","className","s","contact","name","number","deleteBtn","id","type","onClick","Filter","value","onChange","filter","input","Form","state","reset","setState","handleChange","e","target","onFormSubmit","preventDefault","newContact","nanoid","props","isNameExist","alert","onSubmit","form","this","pattern","title","required","submitBtn","Component","Section","children","App","contacts","formHandler","data","prevState","onChangeFilter","currentTarget","formState","some","toLowerCase","newFilter","contactsLocal","localStorage","getItem","contactsParse","JSON","parse","prevProps","console","log","length","setItem","stringify","normalizedFilter","filteredContacts","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f0b78d3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__-4JRz\",\"input\":\"Filter_input__397l5\"};","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport s from './Contacts.module.css'\r\n\r\nconst Contacts = ({options, onDelete }) => {\r\n  return (\r\n    <ul>\r\n      {options.map((option) => {\r\n        return (\r\n          options.lendth !== 0 && (\r\n            <li className={s.contact} key={option.id}>\r\n              <span>{option.name }: { option.number}</span>\r\n              \r\n              <button className={s.deleteBtn} name={option.id} type=\"button\" onClick={onDelete}>\r\n                Delete\r\n              </button>\r\n            </li>\r\n          )\r\n        );\r\n      })}\r\n    </ul>\r\n  )\r\n}\r\n\r\nContacts.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.object),\r\n  onDelete: PropTypes.func,\r\n};\r\n\r\nexport default Contacts\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport s from './Filter.module.css'\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <label className={s.filter} >\r\n      Find\r\n      <input\r\n        className={s.input}\r\n        value={value}\r\n        type=\"text\"\r\n        onChange={onChange}\r\n        name=\"filter\"\r\n      ></input>\r\n    </label>\r\n  )\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default Filter\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { nanoid } from 'nanoid'\r\nimport s from './Form.module.css'\r\n\r\n class Form extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n    id: \"\",\r\n   };\r\n   \r\n   reset = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n   \r\n   handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n   };\r\n   \r\n   \r\n   onFormSubmit = e => {\r\n     e.preventDefault();\r\n      const newContact = {\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n      id: nanoid(),\r\n     };\r\n     if (this.props.isNameExist(this.state.name)) {\r\n      return alert(`${this.state.name} is already in contacts`);\r\n    }\r\n    this.props.onSubmit({ ...newContact });\r\n    this.reset();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={s.form} onSubmit={this.onFormSubmit}>\r\n         <label>\r\n          Name\r\n          <input\r\n            className={s.input}\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          Number\r\n          <input\r\n            className={s.input}\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n          />\r\n        </label>\r\n         <button className={s.submitBtn} type=\"submit\">Add contact</button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\nForm.propTypes = {\r\n  state: PropTypes.arrayOf(PropTypes.object),\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\nexport default Form","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <>\r\n      <h3>{title}</h3>\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n}\r\n\r\nexport default Section\r\n","import { Component } from \"react\";\nimport Contacts from \"./Contacts/Contacts\";\nimport Filter from \"./Filter/Filter\";\nimport Form from \"./Form/Form\";\nimport Section from \"./Section/Section\";\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n  componentDidMount() {\n    const contactsLocal = localStorage.getItem(\"contacts\");\n    const contactsParse = JSON.parse(contactsLocal);\n    if (contactsParse) {\n      this.setState({ contacts: contactsParse });\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    console.log(\"didUpdate\");\n    if (this.state.contacts?.length !== prevState.contacts?.length) {\n      console.log(\"up to date\");\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n  formHandler = (data) => {\n    this.setState((prevState) => ({\n      contacts: [...prevState.contacts, data],\n    }));\n  };\n\n  onChangeFilter = (e) => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  isNameExist = (formState) => {\n    const some = this.state.contacts.some(\n      (contact) => contact.name.toLowerCase() === formState.toLowerCase()\n    );\n    return some;\n  };\n\n  onDelete = (e) => {\n    e.preventDefault();\n    const newFilter = this.state.contacts.filter(\n      (contact) => e.target.name !== contact.id\n    );\n    this.setState({\n      contacts: [...newFilter],\n    });\n  };\n\n  render() {\n    const normalizedFilter = this.state.filter.toLowerCase();\n    const filteredContacts = this.state.contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n    return (\n      <>\n        <Section title=\"Phonebook\">\n          <Form\n            isNameExist={this.isNameExist}\n            state={this.state.contacts}\n            onSubmit={this.formHandler}\n          />\n        </Section>\n        <Section title={\"Contacts\"}>\n          <Filter value={this.state.filter} onChange={this.onChangeFilter} />\n          {this.state.contacts.length !== 0 && (\n            <Contacts onDelete={this.onDelete} options={filteredContacts} />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./Components/App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__14hNN\",\"input\":\"Form_input__MzkLG\",\"submitBtn\":\"Form_submitBtn__3GqN7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"Contacts_contact__1spzo\",\"deleteBtn\":\"Contacts_deleteBtn__2SSkj\"};"],"sourceRoot":""}